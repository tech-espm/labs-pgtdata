// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PGTData.Context;

namespace PGTData.Migrations
{
    [DbContext(typeof(DBPGTContext))]
    [Migration("20191109012822_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PGTData.Models.Campus", b =>
                {
                    b.Property<int>("CampusID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CampusName");

                    b.Property<int>("CityID")
                        .HasColumnName("CityID");

                    b.HasKey("CampusID");

                    b.HasIndex("CityID");

                    b.ToTable("Campus");
                });

            modelBuilder.Entity("PGTData.Models.City", b =>
                {
                    b.Property<int>("CityID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName");

                    b.Property<int>("StateID")
                        .HasColumnName("StateID");

                    b.HasKey("CityID");

                    b.HasIndex("StateID");

                    b.ToTable("City");
                });

            modelBuilder.Entity("PGTData.Models.Comment", b =>
                {
                    b.Property<int>("CommentID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CommentDescription");

                    b.Property<int>("ReviewID")
                        .HasColumnName("ReviewID");

                    b.HasKey("CommentID");

                    b.HasIndex("ReviewID");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("PGTData.Models.File", b =>
                {
                    b.Property<int>("FileID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FilePath");

                    b.HasKey("FileID");

                    b.ToTable("File");
                });

            modelBuilder.Entity("PGTData.Models.Group", b =>
                {
                    b.Property<int>("GroupID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GroupCourse");

                    b.Property<string>("GroupName");

                    b.HasKey("GroupID");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("PGTData.Models.Review", b =>
                {
                    b.Property<int>("ReviewID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FileID")
                        .HasColumnName("FileID");

                    b.Property<string>("ReviewAccording");

                    b.Property<string>("ReviewContent");

                    b.Property<DateTime>("ReviewDate");

                    b.Property<string>("ReviewMemorial");

                    b.Property<string>("ReviewRelevance");

                    b.Property<string>("ReviewResearch");

                    b.Property<int>("ReviewTypeID")
                        .HasColumnName("ReviewTypeID");

                    b.Property<int>("UserID")
                        .HasColumnName("UserID");

                    b.HasKey("ReviewID");

                    b.HasIndex("FileID");

                    b.HasIndex("ReviewTypeID");

                    b.HasIndex("UserID");

                    b.ToTable("Review");
                });

            modelBuilder.Entity("PGTData.Models.ReviewType", b =>
                {
                    b.Property<int>("ReviewTypeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ReviewTypeDescription");

                    b.HasKey("ReviewTypeID");

                    b.ToTable("ReviewType");
                });

            modelBuilder.Entity("PGTData.Models.State", b =>
                {
                    b.Property<int>("StateID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StateName");

                    b.HasKey("StateID");

                    b.ToTable("State");
                });

            modelBuilder.Entity("PGTData.Models.Student", b =>
                {
                    b.Property<int>("StudentID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CampusID");

                    b.Property<int>("GroupID")
                        .HasColumnName("GroupID");

                    b.Property<string>("StudentName");

                    b.Property<int>("StudentRA");

                    b.HasKey("StudentID");

                    b.HasIndex("GroupID");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("PGTData.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CampusID");

                    b.Property<int>("GroupID")
                        .HasColumnName("GroupID");

                    b.Property<string>("UserEmail");

                    b.Property<string>("UserName");

                    b.Property<string>("UserPassword");

                    b.Property<int>("UserRegister");

                    b.Property<int>("UserTypeID")
                        .HasColumnName("UserTypeID");

                    b.HasKey("UserID");

                    b.HasIndex("GroupID");

                    b.HasIndex("UserTypeID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("PGTData.Models.UserType", b =>
                {
                    b.Property<int>("UserTypeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserTypeDescription");

                    b.HasKey("UserTypeID");

                    b.ToTable("UserType");
                });

            modelBuilder.Entity("PGTData.Models.Warning", b =>
                {
                    b.Property<int>("WarningID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("UserID")
                        .HasColumnName("UserID");

                    b.Property<DateTime>("WarningDate");

                    b.Property<string>("WarningDescription");

                    b.HasKey("WarningID");

                    b.HasIndex("UserID");

                    b.ToTable("Warning");
                });

            modelBuilder.Entity("PGTData.Models.Campus", b =>
                {
                    b.HasOne("PGTData.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PGTData.Models.City", b =>
                {
                    b.HasOne("PGTData.Models.State", "State")
                        .WithMany()
                        .HasForeignKey("StateID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PGTData.Models.Comment", b =>
                {
                    b.HasOne("PGTData.Models.Review", "Review")
                        .WithMany()
                        .HasForeignKey("ReviewID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PGTData.Models.Review", b =>
                {
                    b.HasOne("PGTData.Models.File", "File")
                        .WithMany()
                        .HasForeignKey("FileID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PGTData.Models.ReviewType", "ReviewType")
                        .WithMany()
                        .HasForeignKey("ReviewTypeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PGTData.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PGTData.Models.Student", b =>
                {
                    b.HasOne("PGTData.Models.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PGTData.Models.User", b =>
                {
                    b.HasOne("PGTData.Models.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PGTData.Models.UserType", "UserType")
                        .WithMany()
                        .HasForeignKey("UserTypeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PGTData.Models.Warning", b =>
                {
                    b.HasOne("PGTData.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
